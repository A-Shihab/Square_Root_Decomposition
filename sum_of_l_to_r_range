#include <iostream>
#include <bits/stdc++.h>
using namespace std;
 
#define ll long long
#define lli long long int
#define ull unsigned ll
#define pb push_back
#define for1(i, n) for (ll i = 0; i < n; i++)
#define for2(i, n) for (ll i = 1; i <= n; i++)
#define for3(i, n) for (ll i = 2; i < n; i++)
#define for4(i, s) for (ll i = 0; i < s.size(); i++)
#define for5(i, k) for (ll i = 0; i < k; i++)
#define fast() (ios_base::sync_with_stdio(false), cin.tie(NULL));
 
// Sum the number of distinct element
 
const ll N = 1e5 + 5;  // for segment tree
ll a[N], tree[4 * N];   // segment tree declared
 
const ll MOD = 1e9 + 7;
const ll BASE = 256;
 
//bool prime[100005];
 
/*bool shihab()
{
    for(ll i=2; i<N; i++)seive[i]=true;
 
    for(ll i=2; i*i<N; i++)
    {
        if(seive[i]==true)
        {
            for(ll j=i*i; j<N; j+=i)
            {
                seive[j]=false;
            }
        }
    }
    return seive[100000001];
}*/
 int main()
 {
    fast();
     
    ll n;
    cin>>n;
    
    vector<ll>vec(n);
    
    for1(i,n)cin>>vec[i];
    
    ll len=sqrt(n)+1;
    
    vector<ll>v(len,0);
    
    for1(i,n) v[i/len]+=vec[i];
    
    ll l,r;
    cin>>l>>r;
    
    l=l-1,r=r-1;
    
    ll sum=0;
    
    for(ll i=l; i<=r; )
    {
        if(i%len==0 && (i+len-1) <=r)
        {
            sum+=v[i/len];
            i+=len;
        }
        else 
        {
            sum+=v[i];
            i++;
        }
        
    }
      cout<<sum<<endl;
 }
